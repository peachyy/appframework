<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context.xsd  
     http://www.springframework.org/schema/tx  
     http://www.springframework.org/schema/tx/spring-tx.xsd  
     http://www.springframework.org/schema/jdbc  
     http://www.springframework.org/schema/jdbc/spring-jdbc.xsd 
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop.xsd">


	<!-- 数据源配置 -->

	<!-- BoneCP configuration -->
	<bean id="appDataSourceImpl" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${app.jdbc.driver}" />
		<property name="jdbcUrl" value="${${db.config.app}.app.jdbc.url}" />
		<property name="username" value="${${db.config.app}.app.jdbc.username}" />
		<property name="password" value="${${db.config.app}.app.jdbc.password}" />

		<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
		<property name="idleConnectionTestPeriodInMinutes" value="10" />
		<!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
		<property name="idleMaxAgeInMinutes" value="10" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="3" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="1" />
		<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
		<property name="partitionCount" value="3" />
		<!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
		<property name="acquireIncrement" value="3" />
		<!-- 缓存prepared statements的大小，默认值：0 -->
		<property name="statementsCacheSize" value="50" />
		<!-- 在做keep-alive的时候的SQL语句 -->
		<property name="connectionTestStatement" value="select 1 from dual" />
		<!-- 在每次到数据库取连接的时候执行的SQL语句，只执行一次 -->
		<property name="initSQL" value="select 1 from dual" />
	</bean>


	<!-- Spring bean configuration. Tell Spring to bounce off BoneCP -->
	<!-- org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy com.jolbox.bonecp.spring.DynamicDataSourceProxy -->


	<bean id="appDataSource" class="com.jolbox.bonecp.spring.DynamicDataSourceProxy">
		<property name="targetDataSource" ref="appDataSourceImpl" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource" ref="appDataSourceImpl" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean id="appJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="jdbcTemplate" />
	</bean>




	<!-- 使用annotation注解方式配置 事务 默认为 transactionManager , 使用注解 @Transactional("transactionManager 
		ID") 需要显示声明使用拿个，否则会冲突 -->

	<tx:annotation-driven transaction-manager="transactionManager"
		order="0" />


	<!-- 默认的事务管理器，只和数据源相关， 这个事务管理器可以支持spring的 jdbc 和 MyBatis 事务， hibernate需要单独声明和使用 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<!-- <bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" 
		abstract="true"> -->
	<!-- <property name="transactionManager" ref="transactionManager"/> -->
	<!-- <property name="transactionAttributes"> -->
	<!-- <props> -->
	<!-- <prop key="insert*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="update*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="save*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="delete*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop> -->
	<!-- <prop key="list*">PROPAGATION_REQUIRED,readOnly</prop> -->
	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->

<!-- 	<bean id="transactionInterceptor" -->
<!-- 		class="org.springframework.transaction.interceptor.TransactionInterceptor"> -->
<!-- 		<property name="transactionManager" ref="transactionManager" /> -->
<!-- 		<property name="transactionAttributes"> -->
<!-- 			<props> -->
<!-- 				<prop key="insert*">PROPAGATION_REQUIRED</prop> -->
<!-- 				<prop key="update*">PROPAGATION_REQUIRED</prop> -->
<!-- 				<prop key="save*">PROPAGATION_REQUIRED</prop> -->
<!-- 				<prop key="delete*">PROPAGATION_REQUIRED</prop> -->
<!-- 				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop> -->
<!-- 				<prop key="list*">PROPAGATION_REQUIRED,readOnly</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="transactionAttributeSourceAdvisor" -->
<!-- 		class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor"> -->
<!-- 		<property name="transactionInterceptor" ref="transactionInterceptor" /> -->
<!-- 	</bean> -->

<!-- 	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"> -->
<!-- 		<property name="beanNames"> -->
<!-- 			<value>*Jdbc</value> -->
<!-- 		</property> -->
<!-- 		<property name="interceptorNames"> -->
<!-- 			<list> -->
<!-- 				<value>transactionInterceptor</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->


<!-- 	<tx:advice id="appTxAdvice" transaction-manager="transactionManager"> -->
<!-- 	<tx:attributes> -->
<!-- 		<tx:method name="add*" propagation="REQUIRED" /> -->
<!-- 		<tx:method name="insert*" propagation="REQUIRED" /> -->
<!-- 		<tx:method name="delete*" propagation="REQUIRED" /> -->
<!-- 		<tx:method name="update*" propagation="REQUIRED" /> -->
<!-- 		<tx:method name="test*" propagation="REQUIRED" /> -->
<!-- 		<tx:method name="*" propagation="NEVER" /> -->
<!-- 	</tx:attributes> -->
<!-- 	</tx:advice> -->

<!-- 	<aop:config> -->
<!-- 	   <aop:advisor advice-ref="appTxAdvice" pointcut="execution(* test.jdbc.*.*(..))"  /> -->
<!-- 	</aop:config> -->



</beans>
